[
  {
    "core": "ProgLang24_5",
    "name": "document:\"All programming languages\"",
    "solr_query": {
      "rows": 30,
      "wt": "json",
      "facet": "true",
      "facet.field": [
        "paradigm",
        "typing_discipline"
      ],
      "q": "document:\"All programming languages\""
    },
    "tp": 2,
    "fp": 21,
    "fn": 0,
    "s1_pre": 0.08695652173913043,
    "s1_rec": 1.0,
    "s1_f1": 0.16,
    "found_langs": [
      "Go",
      "Rust",
      "Zig",
      "C",
      "Swift",
      "Haskell",
      "C++",
      "Kotlin",
      "Python",
      "MATLAB",
      "C Sharp",
      "Lua",
      "Java",
      "Ruby",
      "Scala",
      "Dart",
      "Assembly language",
      "PHP",
      "Elixir",
      "Apache Groovy",
      "R",
      "JavaScript",
      "PowerShell"
    ],
    "expected_langs": [
      "Java",
      "Python"
    ],
    "ranking": [
      {
        "lang": "Java",
        "expected_rank": 1,
        "actual_rank": 13
      },
      {
        "lang": "Python",
        "expected_rank": 2,
        "actual_rank": 9
      }
    ],
    "ranking_score": 4.75,
    "ranking_score_sperman": -0.9999999999999999,
    "ranking_score_ndcg": 0.7967075809905066,
    "ranking_score_weighted": 7.75,
    "ranking_score_mrr": 0.09401709401709402,
    "facets": {
      "facet_queries": {},
      "facet_fields": {
        "paradigm": [
          "Multi-paradigm : functional , imperative , object-oriented , reflective",
          2,
          "Concurrent functional generic imperative structured",
          1,
          "Imperative , pipeline , object-oriented , functional and reflective",
          1,
          "Imperative , unstructured , often metaprogramming (through macros ), certain assemblers are structured or object-oriented",
          1,
          "Multi-paradigm : concurrent , functional , imperative , object-oriented",
          1,
          "Multi-paradigm : concurrent , imperative , functional , object-oriented",
          1,
          "Multi-paradigm : event-driven , functional , imperative , procedural , object-oriented",
          1,
          "Multi-paradigm : generic , object-oriented ( class-based ), functional , imperative , reflective , concurrent",
          1,
          "Multi-paradigm : imperative ( procedural ), structured",
          1,
          "Multi-paradigm : imperative , concurrent , procedural , functional",
          1,
          "Multi-paradigm : imperative , functional , object-oriented , procedural , reflective",
          1,
          "Multi-paradigm : object-oriented , functional , imperative , block structured , declarative , generic , reflective , concurrent",
          1,
          "Multi-paradigm : object-oriented , imperative , functional , aspect-oriented , scripting",
          1,
          "Multi-paradigm : object-oriented , procedural ( imperative ), functional , structured , reflective",
          1,
          "Multi-paradigm : procedural , imperative , functional , object-oriented , generic , modular",
          1,
          "Multi-paradigm : procedural , object-oriented , functional , reflective , imperative , array",
          1,
          "Multi-paradigm : protocol-oriented , object-oriented , functional , imperative , block structured , declarative , concurrent",
          1,
          "Multi-paradigm : scripting , imperative ( procedural , prototype-based , object-oriented ), functional , meta , reflective",
          1,
          "Multi-paradigm : structured , imperative , object-oriented , event-driven , task-driven , functional , generic , reflective , concurrent",
          1,
          "Purely functional",
          1,
          "multi-paradigm : functional , concurrent , distributed , process-oriented",
          1,
          "multi-paradigm: functional, imperative, procedural, object-oriented, array",
          1,
          "Multi-paradigm : functional , generic , imperative , object-oriented",
          0
        ],
        "typing_discipline": [
          "Inferred , static , strong",
          2,
          "1.x: Optional 2.x: Inferred ( static , strong )",
          1,
          "Affine inferred nominal static strong",
          1,
          "Duck , dynamic , strong",
          1,
          "Dynamic",
          1,
          "Dynamic , static , strong , duck",
          1,
          "Dynamic , strong , duck",
          1,
          "Dynamic , weak , duck",
          1,
          "Dynamic , weak , gradual",
          1,
          "Inferred , static , strong , structural",
          1,
          "Inferred , static , strong , structural , nominal",
          1,
          "None",
          1,
          "Static , dynamic , strong , safe , nominative , partly inferred",
          1,
          "Static , strong , inferred",
          1,
          "Static , strong , inferred , structural , generic",
          1,
          "Static , strong , nominative , partially inferred",
          1,
          "Static , weak , manifest , nominal",
          1,
          "Static, strong, safe , nominative , manifest",
          1,
          "Strong , safe , implicit and dynamic",
          1,
          "duck , dynamic , strong ; optional type annotations (since 3.5, but those hints are ignored, except with unofficial tools)",
          1,
          "dynamic , strong",
          1,
          "dynamic, weak",
          1,
          "Duck , gradual , structural , strong",
          0
        ]
      },
      "facet_ranges": {},
      "facet_intervals": {},
      "facet_heatmaps": {}
    }
  },
  {
    "core": "ProgLang24_5",
    "name": "document:\"languages that support concurrency\"",
    "solr_query": {
      "rows": 30,
      "wt": "json",
      "facet": "true",
      "facet.field": [
        "paradigm"
      ],
      "q": "document:\"languages that support concurrency\""
    },
    "tp": 0,
    "fp": 0,
    "fn": 3,
    "s1_pre": 0,
    "s1_rec": 0.0,
    "s1_f1": 0,
    "found_langs": [],
    "expected_langs": [
      "Elixir",
      "Scala",
      "Go"
    ],
    "ranking": [
      {
        "lang": "Elixir",
        "expected_rank": 1,
        "actual_rank": null
      },
      {
        "lang": "Go",
        "expected_rank": 2,
        "actual_rank": null
      },
      {
        "lang": "Scala",
        "expected_rank": 3,
        "actual_rank": null
      }
    ],
    "ranking_score": 0,
    "ranking_score_sperman": 0,
    "ranking_score_ndcg": 0,
    "ranking_score_weighted": 0,
    "ranking_score_mrr": 0.0,
    "facets": {
      "facet_queries": {},
      "facet_fields": {
        "paradigm": [
          "Concurrent functional generic imperative structured",
          0,
          "Imperative , pipeline , object-oriented , functional and reflective",
          0,
          "Imperative , unstructured , often metaprogramming (through macros ), certain assemblers are structured or object-oriented",
          0,
          "Multi-paradigm : concurrent , functional , imperative , object-oriented",
          0,
          "Multi-paradigm : concurrent , imperative , functional , object-oriented",
          0,
          "Multi-paradigm : event-driven , functional , imperative , procedural , object-oriented",
          0,
          "Multi-paradigm : functional , generic , imperative , object-oriented",
          0,
          "Multi-paradigm : functional , imperative , object-oriented , reflective",
          0,
          "Multi-paradigm : generic , object-oriented ( class-based ), functional , imperative , reflective , concurrent",
          0,
          "Multi-paradigm : imperative ( procedural ), structured",
          0,
          "Multi-paradigm : imperative , concurrent , procedural , functional",
          0,
          "Multi-paradigm : imperative , functional , object-oriented , procedural , reflective",
          0,
          "Multi-paradigm : object-oriented , functional , imperative , block structured , declarative , generic , reflective , concurrent",
          0,
          "Multi-paradigm : object-oriented , imperative , functional , aspect-oriented , scripting",
          0,
          "Multi-paradigm : object-oriented , procedural ( imperative ), functional , structured , reflective",
          0,
          "Multi-paradigm : procedural , imperative , functional , object-oriented , generic , modular",
          0,
          "Multi-paradigm : procedural , object-oriented , functional , reflective , imperative , array",
          0,
          "Multi-paradigm : protocol-oriented , object-oriented , functional , imperative , block structured , declarative , concurrent",
          0,
          "Multi-paradigm : scripting , imperative ( procedural , prototype-based , object-oriented ), functional , meta , reflective",
          0,
          "Multi-paradigm : structured , imperative , object-oriented , event-driven , task-driven , functional , generic , reflective , concurrent",
          0,
          "Purely functional",
          0,
          "multi-paradigm : functional , concurrent , distributed , process-oriented",
          0,
          "multi-paradigm: functional, imperative, procedural, object-oriented, array",
          0
        ]
      },
      "facet_ranges": {},
      "facet_intervals": {},
      "facet_heatmaps": {}
    }
  },
  {
    "core": "ProgLang24_5",
    "name": "document:functional",
    "solr_query": {
      "rows": 30,
      "wt": "json",
      "facet": "true",
      "facet.field": [
        "paradigm",
        "typing_discipline"
      ],
      "q": "document:functional"
    },
    "tp": 12,
    "fp": 5,
    "fn": 1,
    "s1_pre": 0.7058823529411765,
    "s1_rec": 0.9230769230769231,
    "s1_f1": 0.8000000000000002,
    "found_langs": [
      "Haskell",
      "Apache Groovy",
      "Scala",
      "Elixir",
      "C Sharp",
      "Rust",
      "Python",
      "Lua",
      "Swift",
      "JavaScript",
      "Go",
      "Kotlin",
      "Ruby",
      "R",
      "Java",
      "Assembly language",
      "C"
    ],
    "expected_langs": [
      "Lua",
      "Apache Groovy",
      "Rust",
      "Scala",
      "TypeScript",
      "JavaScript",
      "Elixir",
      "Kotlin",
      "Ruby",
      "Python",
      "R",
      "Haskell",
      "Swift"
    ],
    "ranking": [
      {
        "lang": "Haskell",
        "expected_rank": 1,
        "actual_rank": 1
      },
      {
        "lang": "Elixir",
        "expected_rank": 2,
        "actual_rank": 4
      },
      {
        "lang": "Scala",
        "expected_rank": 3,
        "actual_rank": 3
      },
      {
        "lang": "R",
        "expected_rank": 4,
        "actual_rank": 14
      },
      {
        "lang": "Rust",
        "expected_rank": 5,
        "actual_rank": 6
      },
      {
        "lang": "Python",
        "expected_rank": 6,
        "actual_rank": 7
      },
      {
        "lang": "TypeScript",
        "expected_rank": 7,
        "actual_rank": null
      },
      {
        "lang": "JavaScript",
        "expected_rank": 8,
        "actual_rank": 10
      },
      {
        "lang": "Kotlin",
        "expected_rank": 9,
        "actual_rank": 12
      },
      {
        "lang": "Swift",
        "expected_rank": 10,
        "actual_rank": 9
      },
      {
        "lang": "Lua",
        "expected_rank": 11,
        "actual_rank": 8
      },
      {
        "lang": "Ruby",
        "expected_rank": 12,
        "actual_rank": 13
      },
      {
        "lang": "Apache Groovy",
        "expected_rank": 13,
        "actual_rank": 2
      }
    ],
    "ranking_score": 0.22435897435897434,
    "ranking_score_sperman": 0.34965034965034975,
    "ranking_score_ndcg": 0.8967818007884683,
    "ranking_score_weighted": 0.47935120435120426,
    "ranking_score_mrr": 0.36428571428571427,
    "facets": {
      "facet_queries": {},
      "facet_fields": {
        "paradigm": [
          "Concurrent functional generic imperative structured",
          1,
          "Imperative , unstructured , often metaprogramming (through macros ), certain assemblers are structured or object-oriented",
          1,
          "Multi-paradigm : concurrent , functional , imperative , object-oriented",
          1,
          "Multi-paradigm : concurrent , imperative , functional , object-oriented",
          1,
          "Multi-paradigm : event-driven , functional , imperative , procedural , object-oriented",
          1,
          "Multi-paradigm : functional , imperative , object-oriented , reflective",
          1,
          "Multi-paradigm : generic , object-oriented ( class-based ), functional , imperative , reflective , concurrent",
          1,
          "Multi-paradigm : imperative ( procedural ), structured",
          1,
          "Multi-paradigm : object-oriented , functional , imperative , block structured , declarative , generic , reflective , concurrent",
          1,
          "Multi-paradigm : object-oriented , imperative , functional , aspect-oriented , scripting",
          1,
          "Multi-paradigm : object-oriented , procedural ( imperative ), functional , structured , reflective",
          1,
          "Multi-paradigm : procedural , object-oriented , functional , reflective , imperative , array",
          1,
          "Multi-paradigm : protocol-oriented , object-oriented , functional , imperative , block structured , declarative , concurrent",
          1,
          "Multi-paradigm : scripting , imperative ( procedural , prototype-based , object-oriented ), functional , meta , reflective",
          1,
          "Multi-paradigm : structured , imperative , object-oriented , event-driven , task-driven , functional , generic , reflective , concurrent",
          1,
          "Purely functional",
          1,
          "multi-paradigm : functional , concurrent , distributed , process-oriented",
          1,
          "Imperative , pipeline , object-oriented , functional and reflective",
          0,
          "Multi-paradigm : functional , generic , imperative , object-oriented",
          0,
          "Multi-paradigm : imperative , concurrent , procedural , functional",
          0,
          "Multi-paradigm : imperative , functional , object-oriented , procedural , reflective",
          0,
          "Multi-paradigm : procedural , imperative , functional , object-oriented , generic , modular",
          0,
          "multi-paradigm: functional, imperative, procedural, object-oriented, array",
          0
        ],
        "typing_discipline": [
          "Inferred , static , strong",
          2,
          "Affine inferred nominal static strong",
          1,
          "Duck , dynamic , strong",
          1,
          "Dynamic",
          1,
          "Dynamic , static , strong , duck",
          1,
          "Dynamic , strong , duck",
          1,
          "Dynamic , weak , duck",
          1,
          "Inferred , static , strong , structural",
          1,
          "Inferred , static , strong , structural , nominal",
          1,
          "None",
          1,
          "Static , dynamic , strong , safe , nominative , partly inferred",
          1,
          "Static , strong , inferred",
          1,
          "Static , weak , manifest , nominal",
          1,
          "Static, strong, safe , nominative , manifest",
          1,
          "duck , dynamic , strong ; optional type annotations (since 3.5, but those hints are ignored, except with unofficial tools)",
          1,
          "dynamic , strong",
          1,
          "1.x: Optional 2.x: Inferred ( static , strong )",
          0,
          "Duck , gradual , structural , strong",
          0,
          "Dynamic , weak , gradual",
          0,
          "Static , strong , inferred , structural , generic",
          0,
          "Static , strong , nominative , partially inferred",
          0,
          "Strong , safe , implicit and dynamic",
          0,
          "dynamic, weak",
          0
        ]
      },
      "facet_ranges": {},
      "facet_intervals": {},
      "facet_heatmaps": {}
    }
  }
]